name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
      
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      
      - name: Check formatting
        run: cargo fmt --all -- --check
      
      - name: Run clippy
        run: cargo clippy --workspace --all-targets -- -D warnings
      
      - name: Run tests
        run: cargo test --workspace
      
      - name: Check documentation
        run: cargo doc --workspace --no-deps --document-private-items
        env:
          RUSTDOCFLAGS: "-D warnings"

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: check
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      
      - name: Build release
        run: cargo build --release --workspace
      
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: event-modeler-linux-x86_64
          path: target/release/event_modeler
          retention-days: 1
      
      # Generate diagram preview for PRs
      - name: Generate diagram preview
        if: github.event_name == 'pull_request'
        run: |
          ./target/release/event_modeler tests/fixtures/acceptance/example.eventmodel -o example.svg || true
          
      - name: Upload diagram artifact
        if: github.event_name == 'pull_request' && success()
        uses: actions/upload-artifact@v4
        with:
          name: diagram-svg
          path: example.svg
          retention-days: 7
          
      - name: Upload SVG to PR branch
        if: github.event_name == 'pull_request' && success()
        run: |
          # Only run if SVG was generated
          if [ -f example.svg ]; then
            git config --global user.name "github-actions[bot]"
            git config --global user.email "github-actions[bot]@users.noreply.github.com"
            
            mkdir -p .github/preview
            cp example.svg .github/preview/diagram.svg
            
            git add .github/preview/diagram.svg
            if git diff --staged --quiet; then
              echo "No changes to commit"
            else
              git commit -m "Update diagram preview [skip ci]"
              git push origin HEAD:${{ github.head_ref }}
            fi
          fi
          
      - name: Comment PR with diagram
        if: github.event_name == 'pull_request' && success()
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            ## 📊 Event Model Diagram Preview
            
            Generated from `tests/fixtures/acceptance/example.eventmodel`:
            
            ### 🖼️ View Diagram
            ![Event Model Diagram](https://raw.githubusercontent.com/${{ github.repository }}/${{ github.head_ref }}/.github/preview/diagram.svg)
            
            > **Note:** Click the image to view full size. If the image doesn't load, [view it directly](https://github.com/${{ github.repository }}/blob/${{ github.head_ref }}/.github/preview/diagram.svg).
            
            ### 📥 Download
            [Download SVG artifact](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}#artifacts)
            
            ---
            🤖 *Generated by CI build #${{ github.run_number }}*
          comment_tag: diagram-preview